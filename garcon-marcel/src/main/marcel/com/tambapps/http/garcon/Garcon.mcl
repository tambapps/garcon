package com.tambapps.http.garcon

import com.tambapps.http.garcon.endpoint.*
import com.tambapps.http.garcon.io.composer.Composers
import com.tambapps.http.garcon.io.parser.Parsers
import com.tambapps.http.garcon.util.ContentTypeMap

import java.net.InetAddress

import java.lang.reflect.Method

class Garcon extends AbstractGarcon {


  /**
   * Response composers per content type
   */
  public final ContentTypeMap composers = Composers.getMap()

  /**
   * Request parsers per content type
   */
  public final ContentTypeMap parsers = Parsers.getMap()

  constructor(): super()

  constructor(String address, int port): super(address, port)

  constructor(InetAddress address, int port): super(address, port)

  internal fun MarcelEndpointDefiner newDefiner() {
    return new MarcelEndpointDefiner(this, endpointsHandler)
  }

  internal fun Object fromMethod(Object instance, Method method, HttpStatus status) {
    return null
  }

  internal fun HttpExchangeContext newContext(HttpRequest request, HttpResponse response, ContentType contentType, ContentType accept) {
    return new MarcelHttpExchangeContext(request, response, composers, parsers, contentType, accept);
  }

}